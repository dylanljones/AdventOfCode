{
    "title": "Day 7: No Space Left On Device",
    "easter_eggs": [
        "E099 PROGRAMMER IS OVERLY POLITE"
    ],
    "test_input": "$ cd /\n$ ls\ndir a\n14848514 b.txt\n8504156 c.dat\ndir d\n$ cd a\n$ ls\ndir e\n29116 f\n2557 g\n62596 h.lst\n$ cd e\n$ ls\n584 i\n$ cd ..\n$ cd ..\n$ cd d\n$ ls\n4060174 j\n8033020 d.log\n5626152 d.ext\n7214296 k\n",
    "part_1": {
        "text": "You can hear birds chirping and raindrops hitting leaves as the expedition proceeds.\nOccasionally, you can even hear much louder sounds in the distance; how big do the animals get out here, anyway?\n\nThe device the Elves gave you has problems with more than just its communication system.\nYou try to run a system update:\n\n$ system-update --please --pretty-please-with-sugar-on-top\nError: No space left on device\n\nPerhaps you can delete some files to make space for the update?\n\nYou browse around the filesystem to assess the situation and save the resulting terminal output (your puzzle input).\nFor example:\n\n$ cd /\n$ ls\ndir a\n14848514 b.txt\n8504156 c.dat\ndir d\n$ cd a\n$ ls\ndir e\n29116 f\n2557 g\n62596 h.lst\n$ cd e\n$ ls\n584 i\n$ cd ..\n$ cd ..\n$ cd d\n$ ls\n4060174 j\n8033020 d.log\n5626152 d.ext\n7214296 k\n\nThe filesystem consists of a tree of files (plain data) and directories (which can contain other directories or files).\nThe outermost directory is called /.\nYou can navigate around the filesystem, moving into or out of directories and listing the contents of the directory you're currently in.\n\nWithin the terminal output, lines that begin with $ are commands you executed, very much like some modern computers:\n\ncd means change directory.\nThis changes which directory is the current directory, but the specific result depends on the argument:\n  \ncd x moves in one level: it looks in the current directory for the directory named x and makes it the current directory.\ncd ..\nmoves out one level: it finds the directory that contains the current directory, then makes that directory the current directory.\ncd / switches the current directory to the outermost directory, /.\n\n\nls means list.\nIt prints out all of the files and directories immediately contained by the current directory:\n  \n123 abc means that the current directory contains a file named abc with size 123.\ndir xyz means that the current directory contains a directory named xyz.\n\nGiven the commands and output in the example above, you can determine that the filesystem looks visually like this:\n\n- / (dir)\n  - a (dir)\n    - e (dir)\n      - i (file, size=584)\n    - f (file, size=29116)\n    - g (file, size=2557)\n    - h.lst (file, size=62596)\n  - b.txt (file, size=14848514)\n  - c.dat (file, size=8504156)\n  - d (dir)\n    - j (file, size=4060174)\n    - d.log (file, size=8033020)\n    - d.ext (file, size=5626152)\n    - k (file, size=7214296)\n\nHere, there are four directories: / (the outermost directory), a and d (which are in /), and e (which is in a).\nThese directories also contain files of various sizes.\n\nSince the disk is full, your first step should probably be to find directories that are good candidates for deletion.\nTo do this, you need to determine the total size of each directory.\nThe total size of a directory is the sum of the sizes of the files it contains, directly or indirectly.\n(Directories themselves do not count as having any intrinsic size.)\n\nThe total sizes of the directories above can be found as follows:\n\nThe total size of directory e is 584 because it contains a single file i of size 584 and no other directories.\nThe directory a has total size 94853 because it contains files f (size 29116), g (size 2557), and h.lst (size 62596), plus file i indirectly (a contains e which contains i).\nDirectory d has total size 24933642.\nAs the outermost directory, / contains every file.\nIts total size is 48381165, the sum of the size of every file.\n\nTo begin, find all of the directories with a total size of at most 100000, then calculate the sum of their total sizes.\nIn the example above, these directories are a and e; the sum of their total sizes is 95437 (94853 + 584).\n(As in this example, this process can count files more than once!)\n\nFind all of the directories with a total size of at most 100000.\nWhat is the sum of the total sizes of those directories?",
        "test_answer": 95437,
        "answer": "1845346"
    },
    "part_2": {
        "text": "Now, you're ready to choose a directory to delete.\n\nThe total disk space available to the filesystem is 70000000.\nTo run the update, you need unused space of at least 30000000.\nYou need to find a directory you can delete that will free up enough space to run the update.\n\nIn the example above, the total size of the outermost directory (and thus the total amount of used space) is 48381165; this means that the size of the unused space must currently be 21618835, which isn't quite the 30000000 required by the update.\nTherefore, the update still requires a directory with total size of at least 8381165 to be deleted before it can run.\n\nTo achieve this, you have the following options:\n\nDelete directory e, which would increase unused space by 584.\nDelete directory a, which would increase unused space by 94853.\nDelete directory d, which would increase unused space by 24933642.\nDelete directory /, which would increase unused space by 48381165.\n\nDirectories e and a are both too small; deleting them would not free up enough space.\nHowever, directories d and / are both big enough! Between these, choose the smallest: d, increasing unused space by 24933642.\n\nFind the smallest directory that, if deleted, would free up enough space on the filesystem to run the update.\nWhat is the total size of that directory?",
        "test_answer": 24933642,
        "answer": "3636703"
    }
}
