{
    "title": "Day 6: Tuning Trouble",
    "easter_eggs": [
        "The magic smoke, on the other hand, seems to be contained... FOR NOW!"
    ],
    "test_input_idx": 0,
    "part_1": {
        "text": "The preparations are finally complete; you and the Elves leave camp on foot and begin to make your way toward the star fruit grove.\n\nAs you move through the dense undergrowth, one of the Elves gives you a handheld device.\nHe says that it has many fancy features, but the most important one to set up right now is the communication system.\n\nHowever, because he's heard you have significant experience dealing with signal-based systems, he convinced the other Elves that it would be okay to give you their one malfunctioning device - surely you'll have no problem fixing it.\n\nAs if inspired by comedic timing, the device emits a few colorful sparks.\n\nTo be able to communicate with the Elves, the device needs to lock on to their signal.\nThe signal is a series of seemingly-random characters that the device receives one at a time.\n\nTo fix the communication system, you need to add a subroutine to the device that detects a start-of-packet marker in the datastream.\nIn the protocol being used by the Elves, the start of a packet is indicated by a sequence of four characters that are all different.\n\nThe device will send your subroutine a datastream buffer (your puzzle input); your subroutine needs to identify the first position where the four most recently received characters were all different.\nSpecifically, it needs to report the number of characters from the beginning of the buffer to the end of the first such four-character marker.\n\nFor example, suppose you receive the following datastream buffer:\n\nmjqjpqmgbljsphdztnvjfqwrcgsmlb\n\nAfter the first three characters (mjq) have been received, there haven't been enough characters received yet to find the marker.\nThe first time a marker could occur is after the fourth character is received, making the most recent four characters mjqj.\nBecause j is repeated, this isn't a marker.\n\nThe first time a marker appears is after the seventh character arrives.\nOnce it does, the last four characters received are jpqm, which are all different.\nIn this case, your subroutine should report the value 7, because the first start-of-packet marker is complete after 7 characters have been processed.\n\nHere are a few more examples:\n\nbvwbjplbgvbhsrlpgdmjqwftvncz: first marker after character 5\nnppdvjthqldpwncqszvftbrmjlhg: first marker after character 6\nnznrnfrfntjfmvfwmzdfjlvtqnbhcprsg: first marker after character 10\nzcfzfwzzqfrljwzlrfnpqdbhtmscgvjw: first marker after character 11\n\nHow many characters need to be processed before the first start-of-packet marker is detected?",
        "test_input": "mjqjpqmgbljsphdztnvjfqwrcgsmlb",
        "test_answer": 7,
        "test_answer_idx": -9,
        "answer": "1655",
        "time": 0.0008248999947682023
    },
    "part_2": {
        "text": "Your device's communication system is correctly detecting packets, but still isn't working.\nIt looks like it also needs to look for messages.\n\nA start-of-message marker is just like a start-of-packet marker, except it consists of 14 distinct characters rather than 4.\n\nHere are the first positions of start-of-message markers for all of the above examples:\n\nmjqjpqmgbljsphdztnvjfqwrcgsmlb: first marker after character 19\nbvwbjplbgvbhsrlpgdmjqwftvncz: first marker after character 23\nnppdvjthqldpwncqszvftbrmjlhg: first marker after character 23\nnznrnfrfntjfmvfwmzdfjlvtqnbhcprsg: first marker after character 29\nzcfzfwzzqfrljwzlrfnpqdbhtmscgvjw: first marker after character 26\n\nHow many characters need to be processed before the first start-of-message marker is detected?",
        "test_input": "mjqjpqmgbljsphdztnvjfqwrcgsmlb",
        "test_answer": 19,
        "test_answer_idx": -9,
        "answer": "2665",
        "time": 0.0018668000120669603
    }
}
