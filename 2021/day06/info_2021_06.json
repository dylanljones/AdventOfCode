{
    "title": "Day 6: Lanternfish",
    "easter_eggs": [
        "I heard you like lanternfish."
    ],
    "test_input_idx": 0,
    "part_1": {
        "text": "The sea floor is getting steeper.\nMaybe the sleigh keys got carried this way?\n\nA massive school of glowing lanternfish swims past.\nThey must spawn quickly to reach such large numbers - maybe exponentially quickly? You should model their growth rate to be sure.\n\nAlthough you know nothing about this specific species of lanternfish, you make some guesses about their attributes.\nSurely, each lanternfish creates a new lanternfish once every 7 days.\n\nHowever, this process isn't necessarily synchronized between every lanternfish - one lanternfish might have 2 days left until it creates another lanternfish, while another might have 4.\nSo, you can model each fish as a single number that represents the number of days until it creates a new lanternfish.\n\nFurthermore, you reason, a new lanternfish would surely need slightly longer before it's capable of producing more lanternfish: two more days for its first cycle.\n\nSo, suppose you have a lanternfish with an internal timer value of 3:\n\nAfter one day, its internal timer would become 2.\nAfter another day, its internal timer would become 1.\nAfter another day, its internal timer would become 0.\nAfter another day, its internal timer would reset to 6, and it would create a new lanternfish with an internal timer of 8.\nAfter another day, the first lanternfish would have an internal timer of 5, and the second lanternfish would have an internal timer of 7.\n\nA lanternfish that creates a new fish resets its timer to 6, not 7 (because 0 is included as a valid timer value).\nThe new lanternfish starts with an internal timer of 8 and does not start counting down until the next day.\n\nRealizing what you're trying to do, the submarine automatically produces a list of the ages of several hundred nearby lanternfish (your puzzle input).\nFor example, suppose you were given the following list:\n\n3,4,3,1,2\n\nThis list means that the first fish has an internal timer of 3, the second fish has an internal timer of 4, and so on until the fifth fish, which has an internal timer of 2.\nSimulating these fish over several days would proceed as follows:\n\nInitial state: 3,4,3,1,2\nAfter  1 day:  2,3,2,0,1\nAfter  2 days: 1,2,1,6,0,8\nAfter  3 days: 0,1,0,5,6,7,8\nAfter  4 days: 6,0,6,4,5,6,7,8,8\nAfter  5 days: 5,6,5,3,4,5,6,7,7,8\nAfter  6 days: 4,5,4,2,3,4,5,6,6,7\nAfter  7 days: 3,4,3,1,2,3,4,5,5,6\nAfter  8 days: 2,3,2,0,1,2,3,4,4,5\nAfter  9 days: 1,2,1,6,0,1,2,3,3,4,8\nAfter 10 days: 0,1,0,5,6,0,1,2,2,3,7,8\nAfter 11 days: 6,0,6,4,5,6,0,1,1,2,6,7,8,8,8\nAfter 12 days: 5,6,5,3,4,5,6,0,0,1,5,6,7,7,7,8,8\nAfter 13 days: 4,5,4,2,3,4,5,6,6,0,4,5,6,6,6,7,7,8,8\nAfter 14 days: 3,4,3,1,2,3,4,5,5,6,3,4,5,5,5,6,6,7,7,8\nAfter 15 days: 2,3,2,0,1,2,3,4,4,5,2,3,4,4,4,5,5,6,6,7\nAfter 16 days: 1,2,1,6,0,1,2,3,3,4,1,2,3,3,3,4,4,5,5,6,8\nAfter 17 days: 0,1,0,5,6,0,1,2,2,3,0,1,2,2,2,3,3,4,4,5,7,8\nAfter 18 days: 6,0,6,4,5,6,0,1,1,2,6,0,1,1,1,2,2,3,3,4,6,7,8,8,8,8\n\nEach day, a 0 becomes a 6 and adds a new 8 to the end of the list, while each other number decreases by 1 if it was present at the start of the day.\n\nIn this example, after 18 days, there are a total of 26 fish.\nAfter 80 days, there would be a total of 5934.\n\nFind a way to simulate lanternfish.\nHow many lanternfish would there be after 80 days?",
        "test_input": "3,4,3,1,2",
        "test_answer": 5934,
        "test_answer_idx": -1,
        "answer": "343441",
        "time": 0.0004174000000602973
    },
    "part_2": {
        "text": "Suppose the lanternfish live forever and have unlimited food and space.\nWould they take over the entire ocean?\n\nAfter 256 days in the example above, there would be a total of 26984457539 lanternfish!\n\nHow many lanternfish would there be after 256 days?",
        "test_input": "3,4,3,1,2",
        "test_answer": 26984457539,
        "test_answer_idx": -1,
        "answer": "1569108373832",
        "time": 0.0014003000001139299
    }
}
